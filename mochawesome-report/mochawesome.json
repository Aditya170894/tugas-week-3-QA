{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 1,
    "pending": 0,
    "failures": 5,
    "start": "2022-08-12T15:24:15.558Z",
    "end": "2022-08-12T15:24:16.040Z",
    "duration": 482,
    "testsRegistered": 6,
    "passPercent": 16.666666666666664,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "457eeba9-70e1-453f-adfe-5a72f2506e75",
      "title": "",
      "fullFile": "D:\\belajar_api_fazztrack\\api_automation_fazztrack\\testcases\\test.js",
      "file": "\\testcases\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69fe6f49-0865-42ab-81d5-b3047bf4925b",
          "title": "test api",
          "fullFile": "D:\\belajar_api_fazztrack\\api_automation_fazztrack\\testcases\\test.js",
          "file": "\\testcases\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "585bfb31-b2dd-4474-af31-1138af92877f",
              "title": "[@userbyid] Search User by id Test",
              "fullFile": "D:\\belajar_api_fazztrack\\api_automation_fazztrack\\testcases\\test.js",
              "file": "\\testcases\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[@validuserid] Search User by valid id will return status code 200",
                  "fullTitle": "test api [@userbyid] Search User by id Test [@validuserid] Search User by valid id will return status code 200",
                  "timedOut": false,
                  "duration": 340,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let userId = '79f9a8a6-1fa8-4c1d-a910-0ac579586529';\n\nlet response = await api.getUserById(userId);\nlet bodyData = response.body;\n// console.log(response);\n\nexpect(response.status).to.equal(200);\nexpect(bodyData).contains.something.like({id: userId});\nexpect(response.body).has.jsonSchema(getIdSchema);",
                  "err": {
                    "message": "AssertionError: expected 404 to equal 200",
                    "estack": "AssertionError: expected 404 to equal 200\n    at Context.<anonymous> (testcases\\test.js:27:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- 404\n+ 200\n"
                  },
                  "uuid": "3e290a43-59a4-4128-b541-692ddb42d905",
                  "parentUUID": "585bfb31-b2dd-4474-af31-1138af92877f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[@invaliduserid] Search User by invalid id will return status code 404",
                  "fullTitle": "test api [@userbyid] Search User by id Test [@invaliduserid] Search User by invalid id will return status code 404",
                  "timedOut": false,
                  "duration": 20,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let userId = 1234;\n  \n  let response = await api.getUserById(userId);\n  let bodyData = response.body;\n  // console.log(response);\n  \n  expect(bodyData.id).to.equal(userId);\n  expect(response.error).to.equal('ER-01');\n  expect(response.status).to.equal(404);\n  // expect(response.message).to.equal('user not found');",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 1234",
                    "estack": "AssertionError: expected undefined to equal 1234\n    at Context.<anonymous> (testcases\\test.js:40:36)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "cafe8cd2-80ab-469d-ab16-7bd011e1cf44",
                  "parentUUID": "585bfb31-b2dd-4474-af31-1138af92877f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "3e290a43-59a4-4128-b541-692ddb42d905",
                "cafe8cd2-80ab-469d-ab16-7bd011e1cf44"
              ],
              "pending": [],
              "skipped": [],
              "duration": 360,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "86b84a6b-6421-46e8-8cd5-29fd43f89aa3",
              "title": "[@updatedata] Update Data User API Test",
              "fullFile": "D:\\belajar_api_fazztrack\\api_automation_fazztrack\\testcases\\test.js",
              "file": "\\testcases\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "[@positive] Change Data occupation and nationality will return status code 200",
                  "fullTitle": "test api [@updatedata] Update Data User API Test [@positive] Change Data occupation and nationality will return status code 200",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const payload =  {\n      \"id\": \"79f9a8a6-1fa8-4c1d-a910-0ac579586529\",\n      \"firstName\": \"Aditya\",\n      \"lastName\": \"Saputra\",\n      \"age\": 27,\n      \"occupation\": \"Dev Ops\",\n      \"nationality\": \"Jepang\",\n      \"hobbies\": [\n        \"read novel\",\n        \"read manga\"\n      ],\n      \"gender\": \"MALE\",\n      \"createdDate\": \"2022-08-10T22:55:59.891\",\n      \"updatedDate\": null\n    }\n  \n  let response = await api.putUser(payload);\n  let bodyData = response.body;\n  // console.log(response);\n    \n  expect(response.status).to.equal(200);\n  expect(bodyData.occupation).to.equal('Dev Ops');\n  expect(bodyData.nationality).to.equal('Jepang');\n  expect(response.body).has.jsonSchema(updateSchema);",
                  "err": {},
                  "uuid": "da675d3d-2816-4d59-8bf8-80c9fc93c428",
                  "parentUUID": "86b84a6b-6421-46e8-8cd5-29fd43f89aa3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[@agezero] Change Data age with value 0 will return status code 400",
                  "fullTitle": "test api [@updatedata] Update Data User API Test [@agezero] Change Data age with value 0 will return status code 400",
                  "timedOut": false,
                  "duration": 10,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const payload =  {\n\"id\": \"79f9a8a6-1fa8-4c1d-a910-0ac579586529\",\n\"firstName\": \"Aditya\",\n\"lastName\": \"Saputra\",\n\"age\": 27,\n\"occupation\": \"QA Engineer\",\n\"nationality\": \"Indonesia\",\n\"hobbies\": [\n  \"read novel\",\n  \"read manga\"\n],\n\"gender\": \"MALE\",\n\"createdDate\": \"2022-08-10T22:55:59.891\",\n\"updatedDate\": null\n        }\n  \n  let response = await api.putUser(payload);\n  let bodyData = response.body;\n  // console.log(response);\n  \n  expect(response.status).to.equal(400);\n  expect(bodyData.age).to.equal(0);\n  expect(response.error).to.equal('ER-03');\n  // expect(response.message)",
                  "err": {
                    "message": "AssertionError: expected 200 to equal 400",
                    "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (testcases\\test.js:100:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- 200\n+ 400\n"
                  },
                  "uuid": "c478e889-1b60-4cf2-b72b-89f24dce2350",
                  "parentUUID": "86b84a6b-6421-46e8-8cd5-29fd43f89aa3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[@nohobby] Change Data hobbies with empty array will return status code 400",
                  "fullTitle": "test api [@updatedata] Update Data User API Test [@nohobby] Change Data hobbies with empty array will return status code 400",
                  "timedOut": false,
                  "duration": 32,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const payload =  {\n      \"id\": \"79f9a8a6-1fa8-4c1d-a910-0ac579586529\",\n      \"firstName\": \"Aditya\",\n      \"lastName\": \"Saputra\",\n      \"age\": 27,\n      \"occupation\": \"QA Engineer\",\n      \"nationality\": \"Indonesia\",\n      \"hobbies\": [],\n      \"gender\": \"MALE\",\n      \"createdDate\": \"2022-08-10T22:55:59.891\",\n      \"updatedDate\": null\n  }\n  \n  let response = await api.putUser(payload);\n  let bodyData = response.body;\n  // console.log(response);\n  \n  expect(bodyData.hobbies).to.equal(0);\n  expect(response.error).to.equal('ER-03');\n  expect(response.status).to.equal(400);\n  // expect(response.message)",
                  "err": {
                    "message": "AssertionError: expected undefined to equal +0",
                    "estack": "AssertionError: expected undefined to equal +0\n    at Context.<anonymous> (testcases\\test.js:125:41)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "ddab2d68-754c-40d2-93b7-e85f1cab00b2",
                  "parentUUID": "86b84a6b-6421-46e8-8cd5-29fd43f89aa3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "[@idnull] Change Type Data id with null will return status code 404",
                  "fullTitle": "test api [@updatedata] Update Data User API Test [@idnull] Change Type Data id with null will return status code 404",
                  "timedOut": false,
                  "duration": 10,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const payload = {\n      \"id\": null,\n      \"firstName\": \"Aditya\",\n      \"lastName\": \"Saputra\",\n      \"age\": 27,\n      \"occupation\": \"QA Engineer\",\n      \"nationality\": \"Indonesia\",\n      \"hobbies\": [\n          \"read novel\",\n          \"read manga\"\n        ],\n      \"gender\": \"MALE\",\n      \"createdDate\": \"2022-08-10T22:55:59.891\",\n      \"updatedDate\": null\n  }\n  \n  let response = await api.putUser(payload);\n  let bodyData = response.body;\n  // console.log(response);\n  \n  expect(bodyData.id).to.be.null;\n  expect(response.error).to.equal('ER-01');\n  expect(response.status).to.equal(404);\n  expect(response.message).to.equal('user not found');",
                  "err": {
                    "message": "AssertionError: expected undefined to be null",
                    "estack": "AssertionError: expected undefined to be null\n    at Assertion.<anonymous> (node_modules\\chai\\lib\\chai\\core\\assertions.js:733:10)\n    at Assertion.propertyGetter (node_modules\\chai\\lib\\chai\\utils\\addProperty.js:62:29)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (node_modules\\chai\\lib\\chai\\utils\\proxify.js:98:22)\n    at Context.<anonymous> (testcases\\test.js:153:38)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "a8770146-d6e3-455f-a544-79013c52baa6",
                  "parentUUID": "86b84a6b-6421-46e8-8cd5-29fd43f89aa3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da675d3d-2816-4d59-8bf8-80c9fc93c428"
              ],
              "failures": [
                "c478e889-1b60-4cf2-b72b-89f24dce2350",
                "ddab2d68-754c-40d2-93b7-e85f1cab00b2",
                "a8770146-d6e3-455f-a544-79013c52baa6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 77,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}