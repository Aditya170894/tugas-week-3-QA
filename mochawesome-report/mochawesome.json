{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-08-07T04:25:23.187Z",
    "end": "2022-08-07T04:25:23.287Z",
    "duration": 100,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bef5c18e-fffe-45a2-ba82-543d86e77976",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9adbf20-9f71-40b2-aca4-2961c30cad42",
          "title": "Search User API Test",
          "fullFile": "/Users/hendrione/Code/APPS/api_automation_fazztrack/testcases/search-user.js",
          "file": "/testcases/search-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Search User API Test\"",
              "fullTitle": "Search User API Test \"before all\" hook in \"Search User API Test\"",
              "timedOut": false,
              "duration": 38,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"before hooks\");\nlet response = await api.postUser(requestBody);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "8a1c7053-85cf-4ffb-9173-839bb0447f66",
              "parentUUID": "d9adbf20-9f71-40b2-aca4-2961c30cad42",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Search User API Test\"",
              "fullTitle": "Search User API Test \"before each\" hook in \"Search User API Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"before each hooks\");",
              "err": {},
              "uuid": "6117b0aa-51fe-4f6c-a678-9f0926b0b7e5",
              "parentUUID": "d9adbf20-9f71-40b2-aca4-2961c30cad42",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Search User API Test\"",
              "fullTitle": "Search User API Test \"after all\" hook in \"Search User API Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"after hooks\");",
              "err": {},
              "uuid": "74f67f4d-e566-4a7f-b205-9ee47822bca9",
              "parentUUID": "d9adbf20-9f71-40b2-aca4-2961c30cad42",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Search User API Test\"",
              "fullTitle": "Search User API Test \"after each\" hook in \"Search User API Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"after each hooks\");",
              "err": {},
              "uuid": "9e601ed7-7fb3-46d9-a5b3-a6683ed65ade",
              "parentUUID": "d9adbf20-9f71-40b2-aca4-2961c30cad42",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@search-user-api] Search user with valid keyword",
              "fullTitle": "Search User API Test [@search-user-api] Search user with valid keyword",
              "timedOut": false,
              "duration": 12,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let keyword = \"Hendri\";\nlet response = await api.getUser(keyword);\nexpect(response.status).to.equal(201);\nexpect(response.body.data).contains.something.like({firstName: 'Hendri'});\nexpect(response.body).has.jsonSchema(jsonSchema);",
              "err": {
                "message": "AssertionError: expected 200 to equal 201",
                "estack": "AssertionError: expected 200 to equal 201\n    at Context.<anonymous> (testcases/search-user.js:36:36)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                "diff": "- 200\n+ 201\n"
              },
              "uuid": "b634fa46-9ccc-4a42-93b0-a9dd535f2357",
              "parentUUID": "d9adbf20-9f71-40b2-aca4-2961c30cad42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b634fa46-9ccc-4a42-93b0-a9dd535f2357"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "798eaf19-7337-4855-98fe-f12a63c992d0",
          "title": "[@createuser] Create User API Test",
          "fullFile": "/Users/hendrione/Code/APPS/api_automation_fazztrack/testcases/test.js",
          "file": "/testcases/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@search-user] Verify get users API will return data when using valid keyword",
              "fullTitle": "[@createuser] Create User API Test [@search-user] Verify get users API will return data when using valid keyword",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// starting for scripting\nlet namaYgMauDiCari = 'Hendri';\nlet response = await api.getUser(namaYgMauDiCari);\nlet bodyData = response.body;\nexpect(response.status).to.equal(200);\n// expect(bodyData.data.length).to.equal(0);\nconsole.log(bodyData)\nexpect(bodyData.data).contains.something.like({firstName: 'Hendri'});",
              "err": {},
              "uuid": "53d56411-9672-44dd-abf3-01dd64bd2961",
              "parentUUID": "798eaf19-7337-4855-98fe-f12a63c992d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@positive] Create User with valid request data will return status code 200",
              "fullTitle": "[@createuser] Create User API Test [@positive] Create User with valid request data will return status code 200",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const dataRequest = data.dataRequestAPIPostUser(namaYgMauDiCari);\n       let nama = requestBody.firstName;\n       let response =  await api.postUser(requestBody);\n       let bodyData = response.body;\n       expect(response.status).to.equal(200);\n       expect(bodyData.firstName).to.equal(nama);\n       expect(bodyData.id).not.to.be.null;\n      \n       // Additional Assertion\n       response = await api.getUser(nama);\n       bodyData = response.body;\n       expect(response.status).to.equal(200);\n       for(let index = 0; index < bodyData.data.length; index += 1) {\n           expect(bodyData.data[index].firstName.toLowerCase()).to.equal(nama.toLowerCase());\n       }",
              "err": {},
              "uuid": "2dd8a9c1-1dbf-4a97-bc8b-6d5e7f051641",
              "parentUUID": "798eaf19-7337-4855-98fe-f12a63c992d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53d56411-9672-44dd-abf3-01dd64bd2961",
            "2dd8a9c1-1dbf-4a97-bc8b-6d5e7f051641"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}